#@TYPE: Machine
#@NAME: qemuarma9
#@DESCRIPTION: a9 vexpress

require qemuarma9.inc
require conf/machine/include/qemu.inc
#DEFAULTTUNE ?= "armv7at"
require conf/machine/include/arm/armv7a/tune-cortexa9.inc

KERNEL_IMAGETYPE = "zImage"

SERIAL_CONSOLES ?= "115200;ttyAMA0 115200;ttyAMA1"

#Wic configuration
IMAGE_FSTYPES += "wic"
WKS_FILE ?= "qemuarma9-uboot.wks"

# Files that will be included in boot partition
IMAGE_BOOT_FILES ?= "zImage vexpress-v2p-ca9.dtb uboot.env"

CRIU_BUILD_ARCH = "armv7"

#Include u-boot
EXTRA_IMAGEDEPENDS += "u-boot"
UBOOT_MACHINE = "vexpress_ca9x4_defconfig"
# Include u-boot elf file in the images folder
UBOOT_ELF = "u-boot"
PREFERRED_VERSION_u-boot ?= "2021.01"
PREFERRED_RPROVIDER_u-boot-fw-utils ?= "u-boot-fw-utils"
PREFERRED_VERSION_u-boot-fw-utils ?= "2021.01"

# Include u-boot default environment file
UBOOT_INITIAL_ENV = "uboot-init.env"
UBOOT_ENV_SIZE = "0x40000"

# Install uboot environment tools
IMAGE_INSTALL:append = " u-boot-fw-utils"

# For runqemu
QB_SYSTEM_NAME = "qemu-system-arm"
QB_MACHINE = "-machine vexpress-a9"
QB_MEM = "-m 512"
QB_KERNEL_CMDLINE_APPEND = "console=ttyAMA0,115200 console=tty"
QB_ROOTFS_OPT = "-sd @ROOTFS@"
# The option "wic:no-kernel-in-fs" ensures that qemu gets a kernel on the command line (in our case U-Boot)
QB_FSINFO = "wic:no-kernel-in-fs"
QB_DEFAULT_KERNEL = "u-boot.elf"
QB_TAP_OPT = "-netdev tap,id=net0,ifname=@TAP@,script=no,downscript=no"
QB_SLIRP_OPT = "-netdev user,id=net0"
QB_DTB = "zImage-vexpress-v2p-ca9.dtb"
# Overwrite virtio-net-pci defined in oe-core/meta/classes/qemuboot.bbclass,
# since vexpress does not support it.
QB_NETWORK_DEVICE = "-net nic,netdev=net0,macaddr=@MAC@"
# Overwrite  virtio-rng-pci defined in poky/meta/classes/qemuboot.bbclass,
# since vexpress does not support it.
QB_RNG = ""
